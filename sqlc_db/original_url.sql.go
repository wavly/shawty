// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: original_url.sql

package sqlc_db

import (
	"context"
	"database/sql"
)

const getOriginalUrl = `-- name: GetOriginalUrl :one
SELECT original_url FROM urls where code = ?
`

func (q *Queries) GetOriginalUrl(ctx context.Context, code string) (string, error) {
	row := q.db.QueryRowContext(ctx, getOriginalUrl, code)
	var original_url string
	err := row.Scan(&original_url)
	return original_url, err
}

const updateAccessedAndLastCount = `-- name: UpdateAccessedAndLastCount :exec
UPDATE urls SET accessed_count = accessed_count + 1, last_accessed = ? WHERE code = ?
`

type UpdateAccessedAndLastCountParams struct {
	LastAccessed sql.NullTime
	Code         string
}

func (q *Queries) UpdateAccessedAndLastCount(ctx context.Context, arg UpdateAccessedAndLastCountParams) error {
	_, err := q.db.ExecContext(ctx, updateAccessedAndLastCount, arg.LastAccessed, arg.Code)
	return err
}
